// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Automation_Framework._1_Features.WorkflowTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("GM_Australia_Workflow")]
    [NUnit.Framework.CategoryAttribute("WorkFlowTest")]
    public partial class GM_Australia_WorkflowFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GM_Australia_Workflow.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GM_Australia_Workflow", null, ProgrammingLanguage.CSharp, new string[] {
                        "WorkFlowTest"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
    testRunner.Given("I have logged in as an agency user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP01 Create the campaign")]
        public virtual void RFP01CreateTheCampaign()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP01 Create the campaign", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 8
    testRunner.When("I create a campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
    testRunner.Then("The campaign should be created successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP02 Adding the cost items")]
        public virtual void RFP02AddingTheCostItems()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP02 Adding the cost items", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 12
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
    testRunner.And("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
    testRunner.And("I create all single placements from test data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
    testRunner.And("I create all performance packages from test data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
    testRunner.And("I create all sponsorship packages from test data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
    testRunner.Then("The cost items should be present in the media schedule", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP04 Lock cost items in RFP Grid mode")]
        public virtual void RFP04LockCostItemsInRFPGridMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP04 Lock cost items in RFP Grid mode", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 20
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
    testRunner.And("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
    testRunner.When("I check all cost items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
    testRunner.And("I expand all placements", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
    testRunner.And("I click the lock button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
    testRunner.Then("Lock success toast is shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
    testRunner.And("All items should be locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
    testRunner.And("The add and import buttons should be disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP05 Unlock cost item in RFP Grid mode")]
        public virtual void RFP05UnlockCostItemInRFPGridMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP05 Unlock cost item in RFP Grid mode", ((string[])(null)));
#line 30
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 31
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
    testRunner.And("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
    testRunner.When("I check all cost items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
    testRunner.And("I expand all placements", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
    testRunner.And("I click the unlock button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
    testRunner.Then("Unlock success toast is shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 38
    testRunner.And("All items should be unlocked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
    testRunner.And("The add and import buttons should be enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP06 Duplicate cost items in RFP Grid mode")]
        public virtual void RFP06DuplicateCostItemsInRFPGridMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP06 Duplicate cost items in RFP Grid mode", ((string[])(null)));
#line 41
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 42
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
    testRunner.And("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
    testRunner.When("I select a single placement cost item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
    testRunner.And("I click the duplicate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
    testRunner.Then("The single placement should be duplicated with success toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
    testRunner.When("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
    testRunner.And("I select a sponsorship package header row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
    testRunner.And("I click the duplicate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
    testRunner.And("I enter a new duplicate sponsorship package name and click save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
    testRunner.Then("The sponsorship package should be duplicated with success toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 55
    testRunner.When("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
    testRunner.And("I select a performance package header row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
    testRunner.And("I click the duplicate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
    testRunner.Then("The performance package should be duplicated with success toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
    testRunner.When("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
    testRunner.And("I expand all placements", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
    testRunner.And("I select a sponsorship package child item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
    testRunner.And("I click the duplicate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
    testRunner.Then("The sponsorship package child item should be duplicated with success toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 66
    testRunner.When("I uncheck all cost items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
    testRunner.And("I dismiss all toast notifications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
    testRunner.And("I select a performance package child item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
    testRunner.And("I click the duplicate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
    testRunner.Then("The performance package child item should be duplicated with success toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
    testRunner.When("I uncheck all cost items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
    testRunner.And("I expand all placements", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
    testRunner.And("I select multiple single placement cost items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
    testRunner.And("I select multiple performance package header rows", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
    testRunner.And("I select multiple performance package placements", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
    testRunner.And("I select multiple sponsorship package child items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
    testRunner.And("I click the duplicate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
    testRunner.Then("The selected items should bulk duplicate with a success toast message with 14 ite" +
                    "m count", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP07 Replace cost items in RFP Grid mode")]
        public virtual void RFP07ReplaceCostItemsInRFPGridMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP07 Replace cost items in RFP Grid mode", ((string[])(null)));
#line 81
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 82
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
    testRunner.And("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
    testRunner.When("I select a single placement cost item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 86
    testRunner.And("I click the replace button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
    testRunner.And("I replace the single placement", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
    testRunner.Then("The single placement should be replaced", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 90
    testRunner.When("I uncheck all cost items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
    testRunner.And("I select a performance package header row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
    testRunner.And("I click the replace button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
    testRunner.And("I replace the performance package header row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
    testRunner.Then("The performance package header row should be replaced", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 96
    testRunner.When("I uncheck all cost items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
    testRunner.And("I expand a performance package header row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
    testRunner.And("I select a performance package child item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
    testRunner.And("I click the replace button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
    testRunner.And("I replace the performance package child item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
    testRunner.Then("The performance package child item should be replaced", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 103
    testRunner.When("I uncheck all cost items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
    testRunner.And("I expand a sponsorship package header row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
    testRunner.And("I select a sponsorship package child item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
    testRunner.And("I click the replace button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
    testRunner.And("I replace the sponsorship package child item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
    testRunner.Then("The sponsorship package child item should be replaced", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP08 Download import template")]
        public virtual void RFP08DownloadImportTemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP08 Download import template", ((string[])(null)));
#line 110
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 111
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
    testRunner.And("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
    testRunner.And("I download the import template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
    testRunner.Then("the import template should be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP09 Import cost items from file")]
        public virtual void RFP09ImportCostItemsFromFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP09 Import cost items from file", ((string[])(null)));
#line 116
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 117
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
    testRunner.And("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
    testRunner.And("I import the media schedule items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
    testRunner.Then("The imported cost items should be present in the media schedule", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP10 Confirm all cost items")]
        public virtual void RFP10ConfirmAllCostItems()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP10 Confirm all cost items", ((string[])(null)));
#line 122
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 123
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
    testRunner.And("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
    testRunner.And("I confirm all items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
    testRunner.Then("All the items should have status confirmed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP11 Billing")]
        public virtual void RFP11Billing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP11 Billing", ((string[])(null)));
#line 128
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 129
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
    testRunner.And("I navigate to the Billing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
    testRunner.And("I open the Custom Billing page for the first publisher displayed on the UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
    testRunner.Then("The totals values per item are as per test data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP12 Issuing insertion order")]
        public virtual void RFP12IssuingInsertionOrder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP12 Issuing insertion order", ((string[])(null)));
#line 134
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 135
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 136
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
    testRunner.And("I create insertion order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
    testRunner.And("I issue the insertion order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
    testRunner.Then("The insertion order status should be \'Issued (V1)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP13 Recall RFP insertion order")]
        public virtual void RFP13RecallRFPInsertionOrder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP13 Recall RFP insertion order", ((string[])(null)));
#line 142
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 143
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
    testRunner.And("I recall the insertion order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
    testRunner.Then("The insertion order status should be \'Saved (V2)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP14 Subscribing publisher rejects IO")]
        public virtual void RFP14SubscribingPublisherRejectsIO()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP14 Subscribing publisher rejects IO", ((string[])(null)));
#line 149
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 150
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 151
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
    testRunner.And("I click the Pending IO status link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
    testRunner.And("I issue the insertion order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
    testRunner.Given("I have logged out the current user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 156
    testRunner.And("I have logged in as a publisher user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
    testRunner.And("I select my campaign as a publisher user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
    testRunner.When("I reject the insertion order as Publisher", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
    testRunner.And("I have logged out the current user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
    testRunner.And("I log in as an agency user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
    testRunner.And("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
    testRunner.Then("The insertion order should no longer appear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP15 Insertion order publisher sign off")]
        public virtual void RFP15InsertionOrderPublisherSignOff()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP15 Insertion order publisher sign off", ((string[])(null)));
#line 166
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 167
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
    testRunner.And("I create insertion order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
    testRunner.And("I issue the insertion order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
    testRunner.Given("I have logged out the current user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 173
    testRunner.And("I have logged in as a publisher user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
    testRunner.And("I select my campaign as a publisher user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
    testRunner.When("I sign off the insertion order as Publisher", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 177
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
    testRunner.Then("The insertion order status should be \'Part Signed (V1)\' on manage multi IO page f" +
                    "or publisher", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP16 Agency rejects IO")]
        public virtual void RFP16AgencyRejectsIO()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP16 Agency rejects IO", ((string[])(null)));
#line 180
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 181
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 182
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
    testRunner.And("I reject the insertion order as Agency", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
    testRunner.Then("The insertion order should no longer appear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP17 Insertion order agency sign off")]
        public virtual void RFP17InsertionOrderAgencySignOff()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP17 Insertion order agency sign off", ((string[])(null)));
#line 187
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 188
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 189
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
    testRunner.And("I create insertion order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
    testRunner.And("I issue the insertion order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
    testRunner.Given("I have logged out the current user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 194
    testRunner.And("I have logged in as a publisher user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
    testRunner.And("I select my campaign as a publisher user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
    testRunner.When("I sign off the insertion order as Publisher", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 199
    testRunner.Given("I have logged out the current user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 200
    testRunner.And("I have logged in as an agency user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 202
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
    testRunner.And("I sign off the insertion order as Agency", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
    testRunner.Then("The insertion order status should be \'DateSignedOff (V1)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP18 Trafficking")]
        public virtual void RFP18Trafficking()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP18 Trafficking", ((string[])(null)));
#line 207
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 208
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 209
    testRunner.And("I navigate to the Traffic page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
    testRunner.And("I traffic all cost items for all AdServers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP19 Export cost items")]
        public virtual void RFP19ExportCostItems()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP19 Export cost items", ((string[])(null)));
#line 212
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 213
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 214
    testRunner.And("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
    testRunner.When("I export the media schedule export \'Maxus Media Schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 216
    testRunner.Then("The media schedule export should be exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 217
    testRunner.When("I export the media schedule export \'MCOM Media Schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 218
    testRunner.Then("The media schedule export should be exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 219
    testRunner.When("I export the media schedule export \'Mindshare Media Schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 220
    testRunner.Then("The media schedule export should be exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 221
    testRunner.When("I export the media schedule export \'MEC Australia Media Schedule\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 222
    testRunner.Then("The media schedule export should be exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP20 Export Insertion Order")]
        public virtual void RFP20ExportInsertionOrder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP20 Export Insertion Order", ((string[])(null)));
#line 224
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 225
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 226
    testRunner.And("I navigate to the Insertion Order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
    testRunner.And("I click on last signed off link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
    testRunner.And("I export the insertion order export \'IO PDF Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
    testRunner.Then("the insertion order export should be exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP21 Billing Export")]
        public virtual void RFP21BillingExport()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP21 Billing Export", ((string[])(null)));
#line 231
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 232
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 233
    testRunner.And("I navigate to the Billing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 234
    testRunner.And("I export the Billing export \'BCC Media Schedule\' with delivery method as \'Downloa" +
                    "d\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
    testRunner.Then("the Billing export should be exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 236
    testRunner.When("I export the Billing export \'Standard Billing XML Export (2017/09)\' with delivery" +
                    " method as \'Download\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 237
    testRunner.Then("the Billing export should be exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 238
    testRunner.When("I export the Billing export \'Standard Billing XML Export (2018/08)\' with delivery" +
                    " method as \'Download\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 239
    testRunner.Then("the Billing export should be exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 240
    testRunner.When("I export the Billing export \'Standard Billing XML Export (2018/09)\' with delivery" +
                    " method as \'Download\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 241
    testRunner.Then("the Billing export should be exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 242
    testRunner.When("I export the Billing export \'Standard Billing XML Export (2018/11)\' with delivery" +
                    " method as \'Download\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 243
    testRunner.Then("the Billing export should be exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 244
    testRunner.When("I export the Billing export \'Standard Billing XML Export (2019/03)\' with delivery" +
                    " method as \'Download\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
    testRunner.Then("the Billing export should be exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP22 Group Media Schedule Grid")]
        public virtual void RFP22GroupMediaScheduleGrid()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP22 Group Media Schedule Grid", ((string[])(null)));
#line 247
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 248
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 249
    testRunner.And("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
    testRunner.And("I group media schedule grid by \'Cost Type\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 251
    testRunner.Then("Media schedule group \'Media\' are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RFP24 Manage columns in RFP Grid Mode")]
        public virtual void RFP24ManageColumnsInRFPGridMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RFP24 Manage columns in RFP Grid Mode", ((string[])(null)));
#line 253
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 254
    testRunner.When("I select my campaign", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 255
    testRunner.And("I navigate to the Media Schedule page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
    testRunner.When("I select columns to hide", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 258
    testRunner.Then("I should not see the columns on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 260
    testRunner.When("I select columns to display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 261
    testRunner.Then("I should see the columns on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

